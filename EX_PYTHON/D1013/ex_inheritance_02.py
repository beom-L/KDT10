## ---------------------------------------------------------------
## 상속 (Inheritance)
## - 클래스 재사용 및 확장 용도
## - 구성 : 부모/Super 클래스 <-- 자식/Sub 클래스
## ---------------------------------------------------------------
## 클래스 기능 : Point 데이터 표현 클래스
## 클래스 이름 : Point
## 속성 / 특징 : x,y,color
##              클래스   속성 => 없음
##              인스턴스 속성 => 모든 속성
##              비공개   속성 => 없음
## 기능 / 역할 : 그리기, 정보 출력기능
## ---------------------------------------------------------------
class Point:
    ## ------------------------------------------------
    ## - 메모리 스캔 및 할당 메서드
    ## - cls : 클래스 정보, 파이썬에서 전달 (신경쓸 필요없음)
    ## ------------------------------------------------
    def __new__(cls, *args, **kwargs):
        print("From new")
        # 인스턴스를 생성하고 반환
        obj = super().__new__(cls)
        return obj
    
    ## ------------------------------------------------
    ## - 인스턴스 속성 초기화 메서드
    ## - self : 인스턴스 정보, 파이썬에서 전달
    ## ------------------------------------------------
    def __init__(self, x=0, y=0, color='black'):
        print("From init")
        self.x = x
        self.y = y
        self.color = color

    ## ------------------------------------------------
    ## - 인스턴스 전용 메서드 => self
    ## ------------------------------------------------
    ## - 메서드 기능 : 지정된 좌표에 점 그리기
    ## - 메서드 이름 : drawing
    ## - 매개 변수들 : self
    ## - 반환  결과 : 없음 (우리가 그릴거니깐)
    ## ------------------------------------------------
    def drawing(self):
        print(f'{self.x}, {self.y} 위치에 점 그리기')

    ## ------------------------------------------------
    ## - 메서드 기능 : 정보 출력하기
    ## - 메서드 이름 : print_info
    ## - 매개 변수들 : self
    ## - 반환  결과 : 없음 (우리가 그릴거니깐)
    ## ------------------------------------------------
    def print_info(self):
        print(f'색상 : {self.color}')
        print(f'위치 : {self.x}, {self.y}')


## ---------------------------------------------------------------
## 클래스 기능 : Point 3D 데이터 표현 클래스
## 클래스 이름 : Point3D
## 부모 클래스 : Point
## 속성 / 특징 : x, y, z, color
##              클래스   속성 => 없음
##              인스턴스 속성 => 모든 속성
##              비공개   속성 => 없음
## 기능 / 역할 : 그리기, 정보 출력기능
## ---------------------------------------------------------------
class Point3D(Point):
    ## ------------------------------------------------
    ## - 인스턴스 속성 초기화 메서드
    ## - self : 인스턴스 정보, 파이썬에서 전달
    ## ------------------------------------------------
    def __init__(self, x=0, y=0,z=0,color='black'):
        super().__init__(x,y,color) ## 부모 인스턴스부터 만들어야함. 기억하기
        print("From init Point3D")
        self.z = z

    ## ------------------------------------------------
    ## - Overriding Method : 상속관계. 부모의 메서드를 자식이 수정해서 사용
    ## ------------------------------------------------
    ## - 메서드 기능 : 지정된 좌표에 점 그리기
    ## - 메서드 이름 : drawing
    ## - 매개 변수들 : self
    ## - 반환  결과 : 없음 (우리가 그릴거니깐)
    ## ------------------------------------------------
    def drawing(self):
        print(f'{self.x}, {self.y}, {self.z} 위치에 {self.color} 점 그리기')


## - 동일 부모 클래스
class Line(Point):
    pass

## ------------------------------------------------
## - 인스턴스/객체 생성 및 활용
## ------------------------------------------------
p1 = Point3D(x=10,y=25,color='red')
l1 = Line()

print(p1.color, p1.z)
p1.drawing()  ## 3D에 없으니 부모 클래스에서 가져와서 사용함. 그래서 자식 안에 재정의를 해줘야됨 -> 오버라이딩

## ------------------------------------------------
## - 인스턴스/객체 생성 및 활용
## ------------------------------------------------
## => 부모/자식 관계 검사 issubclass(자식, 부모)
print("issubclass(Point3D, Point)", issubclass(Point3D, Point))

## => 인스턴스 검사 isinstance(변수명, 클래스이름)
print("isinstance(p1, Point3D)", isinstance(p1, Point3D))   ## T
print("isinstance(p1, Point)", isinstance(p1, Point))       ## T

print("isinstance(l1, Line)", isinstance(l1, Line))         ## T
print("isinstance(l1, Point)", isinstance(l1, Point))       ## T
                                                            ## -> 모두다 