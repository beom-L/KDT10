## ---------------------------------------------------------
## 다양한 형태의 클래스들
## - 기본 : 속성 (클래스 속성/인스턴스 속성) + 메서드
## - 클래스에 따라서 구성 요소는 모두 존재하지 않을 수 있음
## - 예시
##      * class 클래스이름:
##            pass
##
##      * class 클래스이름:
##            def 메서드이름():pass
##            def 메서드이름():pass  
##
##      * class 클래스이름:
##            클래스 속성1
##            클래스 속성2  
## ---------------------------------------------------------
## 예시] 속성, 메서드 모두 없는 클래스
## ---------------------------------------------------------
class ProductNone:
    pass


## ---------------------------------------------------------
## 예시] 메서드만 존재하는 클래스
## ---------------------------------------------------------
class Product:
    ## -> 정적 메서드 즉, 클래스/인스턴스 속성 사용하지 않는 메서드
    def print_com():
        print("제품.com")

    ## 인스턴스 메서드 즉, 객체/인스턴스 생성해야만 사용 가능한 메서드
    def print_info(self,name,count):
        print(f'제품명 : {name} - {count}개')


## ---------------------------------------------------------
## 객체/인스턴스 생성
## ---------------------------------------------------------
## -> 속성X, 메서드X 인 인스턴스
p1 = ProductNone()
print(p1.__class__, type(p1))

## -> 속성X, 메서드O 인 인스턴스
p2 = Product()

# p2.print_com() ## ERROR
Product.print_com()  ## 얘는 self가 없어서 p2.으로 메서드를 부르면(아래처럼) 저장할 공간이 없어서 에러발생  -> 사용할때, 클래스명.메소드명 으로 입력해야함

p2.print_info('냉장고',2)
# Product.print_info('냉장고',2) ## ERROR