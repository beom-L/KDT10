## ---------------------------------------------------------
## 객체지향언어(OOP) 특성 - 다형성
##
## - 함수/메서드 오버로딩(Overloading)
##   함수 이름은 동일하지만 매개변수/파라미터 개수, 타입이 다르면
##   다른 함수로 인식가능
## ---------------------------------------------------------

## ---------------------------------------------------------
## 클래스 정의 : 한국 사람 데이터 타입 정의
## 클래스 이름 : KoreanPeople
## 속      성 : 나이, 이름, 성별, 주민번호, 국적
##              인스턴스 속성        => 나이, 이름, 성별, _ _주민번호         ## 사람(인스턴스)마다 달라야하는 것
##              클래스   속성        => 국적                                ## 공유 되야하는 것
## 메  서  드 : 정보 출력하기         => 인스턴스 메서드
##             비공개용 나이계산 기능 => _ _인스턴스 메서드
## ---------------------------------------------------------
class KoreanPeople:
    ## 클래스 속성/변수
    NATIONALITY = 'KO'

    ## 인스턴스 생성 및 속성 초기화 메서드
    def __init__(self, name_, age_, gender_, jumin_): ## 매개변수랑 self.변수랑 구분하기 위해 뒤에 _하나를 붙힘
        self.name     = name_  ## 우리가 저장하는 인스턴스 변수명 : self.name / 매개변수 : name_
        self.age      = age_
        self.gender   = gender_
        self.__jumin  = jumin_ ## 외부 접근 불가용 : 비공개

    ## 인스턴스 메서드 => 제품정보 출력
    def _print_info(self):
        print('*'*20)
        print(f'이   름 : {self.name}')
        print(f'성   별 : {self.gender}')
        print(f'주민번호 : {self.__jumin}')
        print('*'*20)

    ## 연산자 메서드 오버로딩 => 매개변수 타입, 개수 다른 매서드
    def __add__(self, other):
        print("__add__()")
        return self.age + other.age

## ---------------------------------------------------------
## 속성과 메서드 활용
## ---------------------------------------------------------
## 객체/인스턴스 생성
hong  = KoreanPeople("홍길동", 20, '남자', '060508-3000000')
ma    = KoreanPeople("마징가", 20, '여자', '060502-4000000')

num1 = list([11,22,33])
num2 = list([5,7,9])

## KoreanPeople 객체/인스턴스 연산 수행
## => 덧셈 연산 : 각 객체/인스턴스 나이를 덧셈 후 반환
print("객체/인스턴스 덧셈",num1+num2) ## 리스트끼리 합쳐짐

# TypeError: unsupported operand type(s) for +  => 연산자 오버로딩을 추가해야됨. 없어서 에러가 난거임
print("객체/인스턴스 덧셈",hong+ma)
