## ---------------------------------------------------------
## 객체지향언어(OOP) 특성 - 정보은닉/캡슐화
##
## - 파이썬은 모든 속성/메서드를 "공개 원칙"
## - 비공개 속성 설정 방법 : _ _속성명
## - 비공개 속성 사용 관련 간접 접근 메서드 getter/setter 메서드
##   * 비공개 속성값 읽기 메서드 => get속성명( )
##   * 비공개 속성값 변경 메서드 => set속성명(새로운 값)
## ---------------------------------------------------------

## ---------------------------------------------------------
## 클래스 정의 : 한국 사람 데이터 타입 정의
## 클래스 이름 : KoreanPeople
## 속      성 : 나이, 이름, 성별, 주민번호, 국적
##              인스턴스 속성        => 나이, 이름, 성별, _ _주민번호          ## 사람(인스턴스)마다 달라야하는 것
##              클래스   속성        => 국적                                ## 공유 되야하는 것
## 메  서  드 : 정보 출력하기         => 인스턴스 메서드
##             비공개 나이계산 기능   => _ _인스턴스 메서드
##             비공개 속성 간접 접근  => 읽기 메서드 get_jumin()
## ---------------------------------------------------------
class KoreanPeople:
    ## 클래스 속성/변수
    NATIONALITY = 'KO'

    ## 인스턴스 생성 및 속성 초기화 메서드
    def __init__(self, name_, age_, gender_, jumin_): ## 매개변수랑 self.변수랑 구분하기 위해 뒤에 _하나를 붙힘
        self.name     = name_  ## 우리가 저장하는 인스턴스 변수명 : self.name / 매개변수 : name_
        self.age      = age_
        self.gender   = gender_
        self.__jumin  = jumin_ ## 외부 접근 불가용 : 비공개

    ## 인스턴스 메서드 => 제품정보 출력
    def _print_info(self):
        print('*'*20)
        print(f'이   름 : {self.name}')
        print(f'성   별 : {self.gender}')
        print(f'주민번호 : {self.__jumin}')
        print('*'*20)

    ## 연산자 메서드 오버로딩 => 매개변수 타입, 개수 다른 매서드
    def __add__(self, other):
        print("__add__()")
        return self.age + other.age
    
    ## 비공개 속성 간접 접근 메서드 => 읽기 메서드
    def get_jumin(self):
        return self.__jumin

    ## 비공개 속성 간접 접근 메서드 => 변경 메서드
    def set_jumin(self, jumin_):
        self.__jumin = jumin_

## ---------------------------------------------------------
## 속성과 메서드 활용
## ---------------------------------------------------------
## 객체/인스턴스 생성
hong  = KoreanPeople("홍길동", 20, '남자', '060508-3000000')
ma    = KoreanPeople("마징가", 20, '여자', '060502-4000000')

## 객체/인스턴스 속성 읽기
print(hong.age)
# print(hong.__jumin)           ## <== 비공개 속성으로 ERROR 발생
print(hong.get_jumin())         ## <== 간접 접근 메서드

## 객체/인스턴스 속성 변경
hong.age = 100

## 060508-3000000 => 060510-3000000
jumin = hong.get_jumin()
jumin = jumin.replace('060508','060510')
hong.set_jumin(jumin)           ## <== 간접 접근 메서드 set_속성명()
print(hong.__dict__)