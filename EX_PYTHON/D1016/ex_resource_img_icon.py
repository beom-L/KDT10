## =====================================================================
##                           Tkinter ICON 설정
## =====================================================================
## - 권장 크기(멀티사이즈 아이콘): 16, 24, 32, 48, 64, 128, 256 px (정사각형)
## - 권장 위치 :  asstes 폴더 아래  XXX.ico
##
## - 전처리
##   * PNG가 정사각형이 아니면 먼저 자르거나 패딩
##   * 최대 크기는 보통 256×256까지만 
##
## - 사용법
##   png 이미지 => root.iconphoto()
##   ico 이미지 => root.iconbitmap()
## =====================================================================
## ---------------------------------------------------------------------
## 모듈로딩
## ---------------------------------------------------------------------
import tkinter as tk
from PIL import Image, ImageOps
import os 

## ---------------------------------------------------------------------
## 전역변수 
## ---------------------------------------------------------------------
ASSETS_DIR = './assets'
SRC_ICON   = './assets/sunflower.png'
DST_ICON   = './assets/sunflower.ico'

## ---------------------------------------------------------------------
## 사용자 함수
## ---------------------------------------------------------------------
## 함수기능 : png 파일을 ico 파일로 변환 후 저장
## 함수이름 : png2ico
## 매개변수 : png_path   - 경로 포함 png 파일명
##           ismulti    - 멀티사이즈 ico 파일 저장 여부 [기] True
## 반환결과 : 없음, ico파일로 저장 
## ---------------------------------------------------------------------
def png2ico(png_path, ismulti=True):
    # 이미지 변환 로딩
    c_img = Image.open(png_path).convert("RGBA")

    # 정사각형이 아니면 정사각형으로 맞춰 자르기(중앙 기준)
    side  = max(c_img.size)
    c_img = ImageOps.fit(c_img, (side, side), Image.LANCZOS)

    # icon 사이즈 
    sizes = [(16,16),(24,24),(32,32),(48,48),(64,64),(128,128),(256,256)]

    # 파일명만 추출
    filename, _ = os.path.splitext(png_path)
    if ismulti:
        ##-> 멀티사이즈 ICO '한 파일' : imgObject.save(..., sizes=sizes)
        ##-> 하나의 .ico 파일 안에 16×16, 32×32, 48×48, 256×256 … 같은 
        ##   여러 크기의 아이콘 이미지가 함께 저장
        ##-> Window에서 알맞은 크기의 파일을 선택해서 자동으로 로딩 
        c_img.save(f'{filename}.ico', format="ICO", sizes=sizes)   
    else:
        ##-> 사이즈별 1개의 파일로 저장
        for s in sizes:
            img = c_img.resize(s, Image.LANCZOS)
            img.save(f'{filename}_{s[0]}x{s[1]}.ico', format="ICO", sizes=[s])


## PNG => ICO로 변환 처리 진행
png2ico(SRC_ICON, False)

## ---------------------------------------------------------------------
## Window 인스턴스 생성 및 폰트 정보 추출 
## ---------------------------------------------------------------------
##- Main Window 인스턴스 생성 및 설정
root = tk.Tk()
root.title("Tkinter 폰트")
root.geometry("800x300+300+300")

##- ico 파일로 설정하는 경우
#root.iconbitmap(default=DST_ICON)

##- png 파일로 설정하는 경우 
ico = tk.PhotoImage(file=SRC_ICON)
root.iconphoto(True, ico)

## ---------------------------------------------------------------------
## Window 이벤트 루프
## ---------------------------------------------------------------------
root.mainloop()
