## =====================================================================
##          Tkinter font
## =====================================================================
## - 한글 폰트명도 인식 가능, OS가 한글 이름 지원하지 않으면 영어식 이름
##
## - 사용법
##   from tkinter import font 
##   font.Font(family="맑은 고딕", size=14, weight="bold", underline=1)
##
## - 속성 
##   * family	    폰트 이름
##   * size	        폰트 크기       (pt 단위)
##   * weight	    굵기            "normal" / "bold"
##   * slant	    기울임          "roman" / "italic"	
##   * underline	밑줄 여부        0 / 1	
##   * overstrike	취소선 여부      0 / 1	
## =====================================================================
## ---------------------------------------------------------------------
## 모듈로딩
## ---------------------------------------------------------------------
import tkinter as tk
from tkinter import font 
from time import sleep


## ---------------------------------------------------------------------
## 전역변수 
## ---------------------------------------------------------------------
##- 공유 폰트 저장 
SHARD_FONT = None


## ---------------------------------------------------------------------
## 사용자 정의 함수
## ---------------------------------------------------------------------
## 함수기능 : 5초 후 두 라벨에 같은 폰트 적용(맑은 고딕, 12, bold)
## 함수이름 : apply_font_chnage
## 매개변수 : 없음
## 반환결과 : 없음
## ---------------------------------------------------------------------
def apply_first_change():
    global SHARD_FONT

    ## 폰트 생성
    SHARD_FONT = font.Font(family="휴먼옛체", size=12, weight="bold")

    ## UI Widget에 적용 fg/foreground 전경색 즉, 글자색상
    leftLB.config(font=SHARD_FONT, foreground='blue')
    rightLB.config(font=SHARD_FONT, foreground='blue')

    ## 2초 뒤에 폰트 사이즈만 일괄 변경(연결된 위젯 모두 즉시 반영)
    ## after(ms, 실행함수이름)
    root.after(2000, lambda: SHARD_FONT.configure(size=20)) ## 2000이면 2초임

## ---------------------------------------------------------------------
## 함수기능 : n초부터 카운트다운 출력 및 폰트 변경 적용 함수 호출 
## 함수이름 : countdown
## 매개변수 : n     - 카운트다운 값 
## 반환결과 : 없음
## ---------------------------------------------------------------------
def countdown(n=5):
    if n > 0:
        infoLB.config(text=f"{n}초 후 폰트 변경…")
        root.after(1000, countdown, n-1)
    else:
        apply_first_change()

## ---------------------------------------------------------------------
## Window 인스턴스 생성 및 폰트 정보 추출 
## ---------------------------------------------------------------------
##- Main Window 인스턴스 생성 및 설정
root = tk.Tk()
root.title("Tkinter 폰트")
root.geometry("800x300+300+300")


## ---------------------------------------------------------------------
## UI 인스턴스 생성 및 설정
## ---------------------------------------------------------------------
##- Label 인스턴스 생성 및 설정
infoLB = tk.Label(root, text="카운트다운")
infoLB.pack()

leftLB = tk.Label(root, text="폰트1")
leftLB.pack(side='left')

rightLB = tk.Label(root, text="폰트2")
rightLB.pack(side='left')

## ---------------------------------------------------------------------
## 기능
## ---------------------------------------------------------------------
##- 5초 뒤에 첫 변경 실행
countdown(5)

## ---------------------------------------------------------------------
## Window 이벤트 루프
## ---------------------------------------------------------------------
root.mainloop()
