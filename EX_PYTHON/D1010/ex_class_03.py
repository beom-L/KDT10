## ---------------------------------------------------------
## 클래스 정의 및 속성과 메서드 활용
## ---------------------------------------------------------

## ---------------------------------------------------------
## 클래스 정의 : 제품에 대한 데이터 타입 정의
## 클래스 이름 : Product
## 속      성 : 제품명, 가격, 제조사, 제조일, 수량
##              인스턴스 속성 => 제품명, 가격, 제조일, 수량      ## 인스턴스마다 달라야하는 것
##              클래스   속성 => 제조사                       ## 공유 되야하는 것
## 메  서  드 : 제품정보 출력하기 => 인스턴스 메서드
## ---------------------------------------------------------
class Product:
    ## 클래스 속성/변수
    MAKER = 'KO'

    ## 인스턴스 생성 및 속성 초기화 메서드
    def __init__(self, name, price, mdate, count): ## self를 통해 메모리 어디에 저장할지 들어옴
        self.name  = name
        self.price = price
        self.mdate = mdate
        self.count = count

    ## 인스턴스 메서드 => 제품정보 출력
    def print_info(self):
        print('*'*20)
        print(f'제품이름 : {self.name}')
        print(f'제품일자 : {self.mdate}')
        print(f'제품수량 : {self.count}개')
        print('*'*20)

## ---------------------------------------------------------
## 속성과 메서드 활용
## ---------------------------------------------------------
## 객체/인스턴스 생성
tv  = Product("TV",100000, '2025/01/01', 100)
cup = Product("Cup",2000, '2025/10/01', 5000)

## 가격 속성 출력
print(f'가  격 => {tv.price}')
print(f'제조사 => {tv.MAKER} / {Product.MAKER}') ## 인스턴스 생성해서 호출 / 인스턴스 생성안하고 호출

## 가격 변경 => 가격 속성의 값을 변경
tv.price = 135000
print(f'가  격 => {tv.price}')

## 제품정보 출력 메서드 호출
tv.print_info()

## 인스턴스 생성 후 속성 추가 !! 해당 인스턴스에만 존재하는 속성이됨 !
tv.kind = '전자제품' ## 이렇게 해도 추가할 수 있음. 하지만 쓰지말기 (꼬여서 별로 좋진 않음)

## ---------------------------------------------------------
## 클래스와 인스턴스에 포함된 속성과 메서드 확인 => __dict__
## ---------------------------------------------------------
print("\n 클래스의 _ _dict_ _")
print(Product.__dict__)

print("\n\n 인스턴스 tv의 _ _dict_ _")
print(tv.__dict__)

print("\n\n 인스턴스 cup의 _ _dict_ _")
print(cup.__dict__)